name: Label Issues (Permissions Example)
on:
  issues:
    types:
      - opened

jobs:
  assign-label:
    permissions:
      issues: read
    runs-on: ubuntu-latest
    steps:
      - name: Assign label
        if: contains(github.event.issue.title, 'bug')
        run: |
          curl -X POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels \
          -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H 'content-type: application/json' \
          -d '{
              "labels": ["bug"]
            }' \
          --fail

#? secrets.GITHUB_TOKEN ? where does this come from ? we dont set any secrets! :Well, it's generated automatically by GitHub.Because here, for assigning this request to GitHub's API,we must authenticate the request.Otherwise, anyone could be sending a request to this API to edit or delete our issues.To make sure that's not happening, we must authenticate the request by attaching a token to it.And this is a token automatically generated by GitHub,which is available in the jobs of this workflow,and which is only valid until our jobs are done.So the token will be deleted by GitHub once our job's executed.It's a very short lift token that's only valid as long as our jobs are running here.

#?  the scope of this token that's being set with those permissions.So depending on which permissions you set here,this token grants more or less access rights.For example, if I only grant read access to issues here,I would be able to get information about an issue but I should not be able to add a new label. ex if we change the permission to read , we git error because we dont have access to write.

# ? as result , for doing proper operation with the token , we need to set proper permission , ex with read permission we could not write even with token!

#? if you don't add this permissions key,your workflow and its jobs has quite permissive permissions.
#? https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
#! almost in all Scopes, the permission is read/write
#* And to enable this more restrictive default,all you have to do is go to the settings>Actions>Geeneral we can finbe more scurity for actions and workflows.check Read repository contents and packages permissions (by default is active)
